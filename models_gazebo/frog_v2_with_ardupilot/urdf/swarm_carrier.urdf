<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from swarm_carrier.urdf.xacro       | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="swarm_carrier">
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.4235294117647059 0.0392156862745098 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.8705882352941177 0.8117647058823529 0.7647058823529411 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <pose rpy="0 0 0" xyz="0 0 0.194923"/>
  <link name="swarm_carrier/base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.5"/>
      <inertia ixx="0.008" ixy="0" ixz="0" iyy="0.015" iyz="0" izz="0.017"/>
    </inertial>
    <collision name="swarm_carrier/base_link_collision">
      <origin rpy="0 0 0" xyz="0 0 -0.08"/>
      <geometry>
        <box size="0.47 0.47 0.23"/>
      </geometry>
    </collision>
    <visual name="swarm_carrier/base_link_visual">
      <geometry>
        <mesh filename="model://iris_with_standoffs/meshes/iris.dae"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <visual name="swarm_carrier/front_left_leg_visual">
      <origin rpy="0 0 0" xyz="0.123 0.22 -0.11"/>
      <geometry>
        <cylinder length="0.17" radius="0.005"/>
      </geometry>
      <material name="black"/>
    </visual>
    <visual name="swarm_carrier/front_right_leg_visual">
      <origin rpy="0 0 0" xyz="0.123 -0.22 -0.11"/>
      <geometry>
        <cylinder length="0.17" radius="0.005"/>
      </geometry>
      <material name="black"/>
    </visual>
    <visual name="swarm_carrier/rear_left_leg_visual">
      <origin rpy="0 0 0" xyz="-0.123 0.22 -0.11"/>
      <geometry>
        <cylinder length="0.17" radius="0.005"/>
      </geometry>
      <material name="black"/>
    </visual>
    <visual name="swarm_carrier/rear_right_leg_visual">
      <origin rpy="0 0 0" xyz="-0.123 -0.22 -0.11"/>
      <geometry>
        <cylinder length="0.17" radius="0.005"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  <gazebo reference="swarm_carrier/base_link">
    <velocity_decay>
      <linear>0.0</linear>
      <angular>0.0</angular>
    </velocity_decay>
  </gazebo>
  <gazebo reference="swarm_carrier/base_link_collision">
    <surface>
      <contact>
        <ode>
          <max_vel>100.0</max_vel>
          <min_depth>0.001</min_depth>
        </ode>
      </contact>
      <friction>
        <ode>
          <mu>100000.0</mu>
          <mu2>100000.0</mu2>
        </ode>
      </friction>
    </surface>
  </gazebo>
  <link name="swarm_carrier/ground_truth/odometry_sensorgt_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00002" iyz="0" izz="0.00002"/>
    </inertial>
  </link>
  <joint name="swarm_carrier/ground_truth/odometry_sensorgt_joint" type="revolute">
    <child link="swarm_carrier/ground_truth/odometry_sensorgt_link"/>
    <parent link="swarm_carrier/base_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <dynamics damping="1.0"/>
  </joint>
  <gazebo reference="swarm_carrier/ground_truth/odometry_sensorgt_joint">
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
      </ode>
    </physics>
    <axis>
      <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
  </gazebo>
  <link name="swarm_carrier/imu_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00002" iyz="0" izz="0.00002"/>
    </inertial>
  </link>
  <gazebo reference="swarm_carrier/imu_link">
    <sensor name="swarm_carrier/imu_sensor" type="imu">
      <pose>0 0 0 3.141593 0 0</pose>
      <always_on>1</always_on>
      <update_rate>1000.0</update_rate>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>swarm_carrier/main/imu</topicName>
        <bodyName>swarm_carrier/imu_link</bodyName>
        <updateRateHz>10.0</updateRateHz>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>swarm_carrier/imu_link</frameName>
        <!-- <robotNamespace>${robot_namespace}</robotNamespace> -->
      </plugin>
    </sensor>
  </gazebo>
  <joint name="swarm_carrier/imu_joint" type="revolute">
    <child link="swarm_carrier/imu_link"/>
    <parent link="swarm_carrier/base_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <dynamics damping="1.0"/>
  </joint>
  <gazebo reference="swarm_carrier/imu_joint">
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
      </ode>
    </physics>
    <axis>
      <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
  </gazebo>
  <link name="swarm_carrier/rotor_0">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.025"/>
      <inertia ixx="9.75e-06" ixy="0" ixz="0" iyy="0.000166704" iyz="0" izz="0.000167604"/>
    </inertial>
    <collision name="swarm_carrier/rotor_0_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
      </geometry>
    </collision>
    <visual name="swarm_carrier/rotor_0_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="model://iris_with_standoffs/meshes/iris_prop_ccw.dae"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <gazebo reference="swarm_carrier/rotor_0">
    <gravity>1</gravity>
    <velocity_decay/>
    <self_collide>0</self_collide>
  </gazebo>
  <!-- <gazebo reference="rotor_${nb}_collision">
            <surface>
                <contact>
                <ode/>
                </contact>
                <friction>
                <ode/>
                </friction>
            </surface>
        </gazebo> -->
  <!-- TODO: Find if joint should be revolute or continuous -->
  <joint name="swarm_carrier/rotor_0_joint" type="continuous">
    <parent link="swarm_carrier/base_link"/>
    <child link="swarm_carrier/rotor_0"/>
    <origin rpy="0 0 0" xyz="0.13 0.22 0.023"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <dynamics damping="0.004"/>
  </joint>
  <gazebo reference="swarm_carrier/rotor_0_joint">
    <axis>
      <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
      </ode>
    </physics>
  </gazebo>
  <link name="swarm_carrier/rotor_1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.025"/>
      <inertia ixx="9.75e-06" ixy="0" ixz="0" iyy="0.000166704" iyz="0" izz="0.000167604"/>
    </inertial>
    <collision name="swarm_carrier/rotor_1_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
      </geometry>
    </collision>
    <visual name="swarm_carrier/rotor_1_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="model://iris_with_standoffs/meshes/iris_prop_ccw.dae"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <gazebo reference="swarm_carrier/rotor_1">
    <gravity>1</gravity>
    <velocity_decay/>
    <self_collide>0</self_collide>
  </gazebo>
  <!-- <gazebo reference="rotor_${nb}_collision">
            <surface>
                <contact>
                <ode/>
                </contact>
                <friction>
                <ode/>
                </friction>
            </surface>
        </gazebo> -->
  <!-- TODO: Find if joint should be revolute or continuous -->
  <joint name="swarm_carrier/rotor_1_joint" type="continuous">
    <parent link="swarm_carrier/base_link"/>
    <child link="swarm_carrier/rotor_1"/>
    <origin rpy="0 0 0" xyz="0.13 -0.22 0.023"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <dynamics damping="0.004"/>
  </joint>
  <gazebo reference="swarm_carrier/rotor_1_joint">
    <axis>
      <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
      </ode>
    </physics>
  </gazebo>
  <link name="swarm_carrier/rotor_2">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.025"/>
      <inertia ixx="9.75e-06" ixy="0" ixz="0" iyy="0.000166704" iyz="0" izz="0.000167604"/>
    </inertial>
    <collision name="swarm_carrier/rotor_2_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
      </geometry>
    </collision>
    <visual name="swarm_carrier/rotor_2_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="model://iris_with_standoffs/meshes/iris_prop_ccw.dae"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <gazebo reference="swarm_carrier/rotor_2">
    <gravity>1</gravity>
    <velocity_decay/>
    <self_collide>0</self_collide>
  </gazebo>
  <!-- <gazebo reference="rotor_${nb}_collision">
            <surface>
                <contact>
                <ode/>
                </contact>
                <friction>
                <ode/>
                </friction>
            </surface>
        </gazebo> -->
  <!-- TODO: Find if joint should be revolute or continuous -->
  <joint name="swarm_carrier/rotor_2_joint" type="continuous">
    <parent link="swarm_carrier/base_link"/>
    <child link="swarm_carrier/rotor_2"/>
    <origin rpy="0 0 0" xyz="-0.13 0.2 0.023"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <dynamics damping="0.004"/>
  </joint>
  <gazebo reference="swarm_carrier/rotor_2_joint">
    <axis>
      <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
      </ode>
    </physics>
  </gazebo>
  <link name="swarm_carrier/rotor_3">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.025"/>
      <inertia ixx="9.75e-06" ixy="0" ixz="0" iyy="0.000166704" iyz="0" izz="0.000167604"/>
    </inertial>
    <collision name="swarm_carrier/rotor_3_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
      </geometry>
    </collision>
    <visual name="swarm_carrier/rotor_3_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="model://iris_with_standoffs/meshes/iris_prop_ccw.dae"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <gazebo reference="swarm_carrier/rotor_3">
    <gravity>1</gravity>
    <velocity_decay/>
    <self_collide>0</self_collide>
  </gazebo>
  <!-- <gazebo reference="rotor_${nb}_collision">
            <surface>
                <contact>
                <ode/>
                </contact>
                <friction>
                <ode/>
                </friction>
            </surface>
        </gazebo> -->
  <!-- TODO: Find if joint should be revolute or continuous -->
  <joint name="swarm_carrier/rotor_3_joint" type="continuous">
    <parent link="swarm_carrier/base_link"/>
    <child link="swarm_carrier/rotor_3"/>
    <origin rpy="0 0 0" xyz="-0.13 -0.2 0.023"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <dynamics damping="0.004"/>
  </joint>
  <gazebo reference="swarm_carrier/rotor_3_joint">
    <axis>
      <use_parent_model_frame>1</use_parent_model_frame>
    </axis>
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
      </ode>
    </physics>
  </gazebo>
  <gazebo>
    <static>0</static>
  </gazebo>
  <!-- Joint connecting zed to swarm carrier -->
  <!--	<joint name="${namespace}/zed_mount" type="revolute">-->
  <!--		<parent>${namespace}/base_link</parent>-->
  <!--		<child>${namespace}/zedm_base_link</child>-->
  <!--		<axis xyz="0 0 1"/>-->
  <!--		<limit-->
  <!--		lower="0"-->
  <!--		upper="0"-->
  <!--		effort="0"-->
  <!--		velocity="0"-->
  <!--		/>-->
  <!--    </joint>-->
  <!--	<gazebo reference="${namespace}/zed_mount">-->
  <!--		<axis>-->
  <!--			<use_parent_model_frame>true</use_parent_model_frame>-->
  <!--		</axis>-->
  <!--	</gazebo>-->
  <!-- Wireless antenna array -->
  <!-- <xacro:wirelessAntenna
		name="${namespace}/wireless_antenna1"
	/> -->
  <!-- Wireless antenna joints -->
  <!-- <xacro:wirelessAntennaJoint
		name="${namespace}/wireless_antenna1"
		robot_namespace="${namespace}"
		yaw="${PI}"
		pitch="${PI/2}"
	/> -->
  <gazebo>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_0_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_0</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_0_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_0</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_1_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_1</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_1_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_1</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_2_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_2</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_2_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_2</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_3_blade_1">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>0.084 0 0</cp>
      <forward>0 -1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_3</link_name>
    </plugin>
    <plugin filename="libLiftDragPlugin.so" name="swarm_carrier/rotor_3_blade_2">
      <a0>0.3</a0>
      <alpha_stall>1.4</alpha_stall>
      <cla>4.2500</cla>
      <cda>0.10</cda>
      <cma>0.00</cma>
      <cla_stall>-0.025</cla_stall>
      <cda_stall>0.0</cda_stall>
      <cma_stall>0.0</cma_stall>
      <area>0.002</area>
      <air_density>1.2041</air_density>
      <cp>-0.084 0 0</cp>
      <forward>0 1 0</forward>
      <upward>0 0 1</upward>
      <link_name>swarm_carrier/rotor_3</link_name>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libArduPilotPlugin.so" name="arducopter_plugin">
      <fdm_addr>127.0.0.1</fdm_addr>
      <fdm_port_in>9002</fdm_port_in>
      <fdm_port_out>9003</fdm_port_out>
      <!--
                    Require by APM :
                    Only change model and gazebo from XYZ to XY-Z coordinates
                -->
      <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
      <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>
      <imuName>swarm_carrier::swarm_carrier/imu_link::swarm_carrier/imu_sensor</imuName>
      <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
      <control channel="0">
        <!--
                    incoming control command [0, 1]
                    so offset it by 0 to get [0, 1]
                    and divide max target by 1.
                    offset = 0
                    multiplier = 838 max rpm / 1 = 838
                    -->
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>swarm_carrier/rotor_0_joint</jointName>
        <multiplier>838</multiplier>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="1">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>swarm_carrier/rotor_1_joint</jointName>
        <multiplier>838</multiplier>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="2">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>swarm_carrier/rotor_2_joint</jointName>
        <multiplier>-838</multiplier>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
      <control channel="3">
        <type>VELOCITY</type>
        <offset>0</offset>
        <p_gain>0.20</p_gain>
        <i_gain>0</i_gain>
        <d_gain>0</d_gain>
        <i_max>0</i_max>
        <i_min>0</i_min>
        <cmd_max>2.5</cmd_max>
        <cmd_min>-2.5</cmd_min>
        <jointName>swarm_carrier/rotor_3_joint</jointName>
        <multiplier>-838</multiplier>
        <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
      </control>
    </plugin>
  </gazebo>
  <!-- <gazebo>
		<xacro:include>
			<uri>model://gimbal_small_2d</uri>
			<pose>0 -0.01 0.070 1.57 0 1.57</pose>
		</xacro:include>

		<joint name="iris_gimbal_mount" type="revolute">
		<parent>iris::base_link</parent>
		<child>gimbal_small_2d::base_link</child>
		<axis>
			<limit>
			<lower>0</lower>
			<upper>0</upper>
			</limit>
			<xyz>0 0 1</xyz>
			<use_parent_model_frame>true</use_parent_model_frame>
		</axis>
		</joint>
	</gazebo> -->
</robot>

